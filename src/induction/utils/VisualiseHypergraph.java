/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VisualiseHypergraph.java
 *
 * Created on 01-Mar-2011, 23:28:23
 */

package induction.utils;

import edu.uci.ics.jung.algorithms.layout.CircleLayout;
import edu.uci.ics.jung.algorithms.layout.HypergraphLayout;
import edu.uci.ics.jung.graph.Hypergraph;
import edu.uci.ics.jung.graph.SetHypergraph;
import edu.uci.ics.jung.graph.SparseForest;
import edu.uci.ics.jung.visualization.VisualizationViewer;
import edu.uci.ics.jung.visualization.renderers.BasicHypergraphRenderer;
import java.awt.Component;
import java.awt.Dimension;
import java.util.Arrays;

/**
 *
 * @author sinantie
 */
public class VisualiseHypergraph extends javax.swing.JFrame {

    /** Creates new form VisualiseHypergraph */
    public VisualiseHypergraph() {
        initComponents();
        setSize(600, 600);
        getContentPane().add(createHypergraph());
    }

    private Component createHypergraph()
    {
        SparseForest<Integer, Character> hg =
        new SparseForest<Integer, Character>();
        hg.addVertex(1);
        hg.addVertex(2);
        hg.addVertex(3);
        hg.addEdge('a', Arrays.asList(1));
        hg.addEdge('b', Arrays.asList(1, 2, 3));
        HypergraphLayout<Integer, Character> l =
            new HypergraphLayout<Integer, Character>(hg, CircleLayout.class);
        VisualizationViewer<Integer, Character> v =
            new VisualizationViewer<Integer, Character>(l,
            new Dimension(600, 600));
        v.setRenderer(new BasicHypergraphRenderer<Integer, Character>());       
        return v;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.FlowLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new VisualiseHypergraph().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
